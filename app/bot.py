import asyncio

from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.filters import Command, CommandStart
from aiogram.types import Message
from django.conf import settings
from django.utils import timezone

import django
import os

# Ensure Django is setup when running bot directly (e.g., via asyncio.run)
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'blog_project.settings')
django.setup()

from blog.models import Post

from .config import load_config


async def main() -> None:
    config = load_config()
    bot = Bot(config.bot_token, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
    dp = Dispatcher()

    @dp.message(CommandStart())
    async def on_start(message: Message) -> None:
        text = (
            "ü§ñ <b>–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç Pomoika Vape Lab</b>\n\n"
            "–Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –Ω–∞—à–∏—Ö —Ç–æ–≤–∞—Ä–∞—Ö.\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "/help - –ø–æ–º–æ—â—å\n"
            "/info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—Å"
        )
        await message.answer(text)

    @dp.message(Command("help"))
    async def on_help(message: Message) -> None:
        text = (
            "üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n\n"
            "/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
            "/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
            "/info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Pomoika Vape Lab\n"
            "/contact - –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
        )
        await message.answer(text)

    @dp.message(Command("info"))
    async def on_info(message: Message) -> None:
        text = (
            "üè™ <b>Pomoika Vape Lab</b>\n\n"
            "–ú—ã —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º—Å—è –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –≤–µ–π–ø-—Ç–æ–≤–∞—Ä–∞—Ö:\n"
            "‚Ä¢ –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ —Å–∏–≥–∞—Ä–µ—Ç—ã\n"
            "‚Ä¢ –ñ–∏–¥–∫–æ—Å—Ç–∏ –¥–ª—è –≤–µ–π–ø–∞\n"
            "‚Ä¢ –ê–∫—Å–µ—Å—Å—É–∞—Ä—ã\n"
            "‚Ä¢ –ó–∞–ø—á–∞—Å—Ç–∏\n\n"
            "–í—Å–µ —Ç–æ–≤–∞—Ä—ã —Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã –∏ –∏–º–µ—é—Ç –≥–∞—Ä–∞–Ω—Ç–∏—é –∫–∞—á–µ—Å—Ç–≤–∞."
            f"–°–∞–π—Ç: {config.base_url}\n"
        )
        await message.answer(text)

    @dp.message(Command("contact"))
    async def on_contact(message: Message) -> None:
        text = (
            "üìû <b>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>\n\n"
            "–î–ª—è –∑–∞–∫–∞–∑–∞ –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å:\n"
            "‚Ä¢ Telegram: @pmkvl_admin\n"
        )
        await message.answer(text)

    @dp.message(Command("posts"))
    async def on_posts(message: Message) -> None:
        posts = Post.objects.filter(published_date__isnull=False).order_by('-published_date')[:5]
        if not posts:
            await message.answer("–ü–æ–∫–∞ –Ω–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤.")
            return
        items = []
        for p in posts:
            url = f"{config.base_url}/post/{p.id}/"
            title = p.title
            items.append(f"‚Ä¢ <a href=\"{url}\">{title}</a>")
        text = "\n".join(["üì∞ <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—ã</b>", *items])
        await message.answer(text, disable_web_page_preview=True)

    @dp.message()
    async def on_any_message(message: Message) -> None:
        text = (
            "–ù–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥."
        )
        await message.answer(text)

    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())

{"ast":null,"code":"import _defineProperty from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/web.timers.js\";\n// Styles\nimport \"../../../src/components/VSnackbar/VSnackbar.sass\"; // Components\n\nimport VSheet from '../VSheet/VSheet'; // Mixins\n\nimport Colorable from '../../mixins/colorable';\nimport Themeable from '../../mixins/themeable';\nimport Toggleable from '../../mixins/toggleable';\nimport { factory as PositionableFactory } from '../../mixins/positionable'; // Utilities\n\nimport mixins from '../../util/mixins';\nimport { convertToUnit, getSlot } from '../../util/helpers';\nimport { deprecate, removed } from '../../util/console';\nexport default mixins(VSheet, Colorable, Toggleable, PositionableFactory(['absolute', 'bottom', 'left', 'right', 'top'])\n/* @vue/component */).extend({\n  name: 'v-snackbar',\n  props: {\n    app: Boolean,\n    centered: Boolean,\n    contentClass: {\n      type: String,\n      \"default\": ''\n    },\n    multiLine: Boolean,\n    text: Boolean,\n    timeout: {\n      type: [Number, String],\n      \"default\": 5000\n    },\n    transition: {\n      type: [Boolean, String],\n      \"default\": 'v-snack-transition',\n      validator: function validator(v) {\n        return typeof v === 'string' || v === false;\n      }\n    },\n    vertical: Boolean\n  },\n  data: function data() {\n    return {\n      activeTimeout: -1\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return {\n        'v-snack--absolute': this.absolute,\n        'v-snack--active': this.isActive,\n        'v-snack--bottom': this.bottom || !this.top,\n        'v-snack--centered': this.centered,\n        'v-snack--has-background': this.hasBackground,\n        'v-snack--left': this.left,\n        'v-snack--multi-line': this.multiLine && !this.vertical,\n        'v-snack--right': this.right,\n        'v-snack--text': this.text,\n        'v-snack--top': this.top,\n        'v-snack--vertical': this.vertical\n      };\n    },\n    // Text and outlined styles both\n    // use transparent backgrounds\n    hasBackground: function hasBackground() {\n      return !this.text && !this.outlined;\n    },\n    // Snackbar is dark by default\n    // override themeable logic.\n    isDark: function isDark() {\n      return this.hasBackground ? !this.light : Themeable.options.computed.isDark.call(this);\n    },\n    styles: function styles() {\n      if (this.absolute || !this.app) return {};\n      var _this$$vuetify$applic = this.$vuetify.application,\n        bar = _this$$vuetify$applic.bar,\n        bottom = _this$$vuetify$applic.bottom,\n        footer = _this$$vuetify$applic.footer,\n        insetFooter = _this$$vuetify$applic.insetFooter,\n        left = _this$$vuetify$applic.left,\n        right = _this$$vuetify$applic.right,\n        top = _this$$vuetify$applic.top;\n      return {\n        paddingBottom: convertToUnit(bottom + footer + insetFooter),\n        paddingLeft: convertToUnit(left),\n        paddingRight: convertToUnit(right),\n        paddingTop: convertToUnit(bar + top)\n      };\n    }\n  },\n  watch: {\n    isActive: 'setTimeout',\n    timeout: 'setTimeout'\n  },\n  mounted: function mounted() {\n    if (this.isActive) this.setTimeout();\n  },\n  created: function created() {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('auto-height')) {\n      removed('auto-height', this);\n    }\n    /* istanbul ignore next */\n    // eslint-disable-next-line eqeqeq\n\n    if (this.timeout == 0) {\n      deprecate('timeout=\"0\"', '-1', this);\n    }\n  },\n  methods: {\n    genActions: function genActions() {\n      return this.$createElement('div', {\n        staticClass: 'v-snack__action '\n      }, [getSlot(this, 'action', {\n        attrs: {\n          \"class\": 'v-snack__btn'\n        }\n      })]);\n    },\n    genContent: function genContent() {\n      return this.$createElement('div', {\n        staticClass: 'v-snack__content',\n        \"class\": _defineProperty({}, this.contentClass, true),\n        attrs: {\n          role: 'status',\n          'aria-live': 'polite'\n        }\n      }, [getSlot(this)]);\n    },\n    genWrapper: function genWrapper() {\n      var _this = this;\n      var setColor = this.hasBackground ? this.setBackgroundColor : this.setTextColor;\n      var data = setColor(this.color, {\n        staticClass: 'v-snack__wrapper',\n        \"class\": VSheet.options.computed.classes.call(this),\n        style: VSheet.options.computed.styles.call(this),\n        directives: [{\n          name: 'show',\n          value: this.isActive\n        }],\n        on: {\n          pointerenter: function pointerenter() {\n            return window.clearTimeout(_this.activeTimeout);\n          },\n          pointerleave: this.setTimeout\n        }\n      });\n      return this.$createElement('div', data, [this.genContent(), this.genActions()]);\n    },\n    genTransition: function genTransition() {\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition\n        }\n      }, [this.genWrapper()]);\n    },\n    setTimeout: function setTimeout() {\n      var _this2 = this;\n      window.clearTimeout(this.activeTimeout);\n      var timeout = Number(this.timeout);\n      if (!this.isActive ||\n      // TODO: remove 0 in v3\n      [0, -1].includes(timeout)) {\n        return;\n      }\n      this.activeTimeout = window.setTimeout(function () {\n        _this2.isActive = false;\n      }, timeout);\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      staticClass: 'v-snack',\n      \"class\": this.classes,\n      style: this.styles\n    }, [this.transition !== false ? this.genTransition() : this.genWrapper()]);\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { VExpandTransition } from '../transitions'; // Mixins\n\nimport Bootable from '../../mixins/bootable';\nimport Colorable from '../../mixins/colorable';\nimport { inject as RegistrableInject } from '../../mixins/registrable'; // Utilities\n\nimport { getSlot } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nvar baseMixins = mixins(Bootable, Colorable, RegistrableInject('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel'));\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-expansion-panel-content',\n  data: function data() {\n    return {\n      isActive: false\n    };\n  },\n  computed: {\n    parentIsActive: function parentIsActive() {\n      return this.expansionPanel.isActive;\n    }\n  },\n  watch: {\n    parentIsActive: {\n      immediate: true,\n      handler: function handler(val, oldVal) {\n        var _this = this;\n        if (val) this.isBooted = true;\n        if (oldVal == null) this.isActive = val;else this.$nextTick(function () {\n          return _this.isActive = val;\n        });\n      }\n    }\n  },\n  created: function created() {\n    this.expansionPanel.registerContent(this);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.expansionPanel.unregisterContent();\n  },\n  render: function render(h) {\n    var _this2 = this;\n    return h(VExpandTransition, this.showLazyContent(function () {\n      return [h('div', _this2.setBackgroundColor(_this2.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: _this2.isActive\n        }]\n      }), [h('div', {\n        \"class\": 'v-expansion-panel-content__wrap'\n      }, getSlot(_this2))])];\n    }));\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
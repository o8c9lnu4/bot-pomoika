{"ast":null,"code":"import _defineProperty from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"../../../src/components/VGrid/VGrid.sass\";\nimport Vue from 'vue';\nimport mergeData from '../../util/mergeData';\nimport { upperFirst } from '../../util/helpers'; // no xs\n\nvar breakpoints = ['sm', 'md', 'lg', 'xl'];\nvar ALIGNMENT = ['start', 'end', 'center'];\nfunction makeProps(prefix, def) {\n  return breakpoints.reduce(function (props, val) {\n    props[prefix + upperFirst(val)] = def();\n    return props;\n  }, {});\n}\nvar alignValidator = function alignValidator(str) {\n  return [].concat(ALIGNMENT, ['baseline', 'stretch']).includes(str);\n};\nvar alignProps = makeProps('align', function () {\n  return {\n    type: String,\n    \"default\": null,\n    validator: alignValidator\n  };\n});\nvar justifyValidator = function justifyValidator(str) {\n  return [].concat(ALIGNMENT, ['space-between', 'space-around']).includes(str);\n};\nvar justifyProps = makeProps('justify', function () {\n  return {\n    type: String,\n    \"default\": null,\n    validator: justifyValidator\n  };\n});\nvar alignContentValidator = function alignContentValidator(str) {\n  return [].concat(ALIGNMENT, ['space-between', 'space-around', 'stretch']).includes(str);\n};\nvar alignContentProps = makeProps('alignContent', function () {\n  return {\n    type: String,\n    \"default\": null,\n    validator: alignContentValidator\n  };\n});\nvar propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps)\n};\nvar classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content'\n};\nfunction breakpointClass(type, prop, val) {\n  var className = classMap[type];\n  if (val == null) {\n    return undefined;\n  }\n  if (prop) {\n    // alignSm -> Sm\n    var breakpoint = prop.replace(type, '');\n    className += \"-\".concat(breakpoint);\n  } // .align-items-sm-center\n\n  className += \"-\".concat(val);\n  return className.toLowerCase();\n}\nvar cache = new Map();\nexport default Vue.extend({\n  name: 'v-row',\n  functional: true,\n  props: _objectSpread(_objectSpread(_objectSpread({\n    tag: {\n      type: String,\n      \"default\": 'div'\n    },\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      \"default\": null,\n      validator: alignValidator\n    }\n  }, alignProps), {}, {\n    justify: {\n      type: String,\n      \"default\": null,\n      validator: justifyValidator\n    }\n  }, justifyProps), {}, {\n    alignContent: {\n      type: String,\n      \"default\": null,\n      validator: alignContentValidator\n    }\n  }, alignContentProps),\n  render: function render(h, _ref) {\n    var props = _ref.props,\n      data = _ref.data,\n      children = _ref.children;\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    var cacheKey = '';\n    for (var prop in props) {\n      cacheKey += String(props[prop]);\n    }\n    var classList = cache.get(cacheKey);\n    if (!classList) {\n      classList = []; // Loop through `align`, `justify`, `alignContent` breakpoint props\n\n      var type;\n      for (type in propMap) {\n        propMap[type].forEach(function (prop) {\n          var value = props[prop];\n          var className = breakpointClass(type, prop, value);\n          if (className) classList.push(className);\n        });\n      }\n      classList.push(_defineProperty(_defineProperty(_defineProperty({\n        'no-gutters': props.noGutters,\n        'row--dense': props.dense\n      }, \"align-\".concat(props.align), props.align), \"justify-\".concat(props.justify), props.justify), \"align-content-\".concat(props.alignContent), props.alignContent));\n      cache.set(cacheKey, classList);\n    }\n    return h(props.tag, mergeData(data, {\n      staticClass: 'row',\n      \"class\": classList\n    }), children);\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
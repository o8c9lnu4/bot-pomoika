{"ast":null,"code":"import _objectSpread from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reverse.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n// Styles\nimport \"../../../src/components/VWindow/VWindow.sass\"; // Directives\n\nimport Touch from '../../directives/touch'; // Components\n\nimport VBtn from '../VBtn';\nimport VIcon from '../VIcon';\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup';\n/* @vue/component */\n\nexport default BaseItemGroup.extend({\n  name: 'v-window',\n  directives: {\n    Touch: Touch\n  },\n  provide: function provide() {\n    return {\n      windowGroup: this\n    };\n  },\n  props: {\n    activeClass: {\n      type: String,\n      \"default\": 'v-window-item--active'\n    },\n    continuous: Boolean,\n    mandatory: {\n      type: Boolean,\n      \"default\": true\n    },\n    nextIcon: {\n      type: [Boolean, String],\n      \"default\": '$next'\n    },\n    prevIcon: {\n      type: [Boolean, String],\n      \"default\": '$prev'\n    },\n    reverse: Boolean,\n    showArrows: Boolean,\n    showArrowsOnHover: Boolean,\n    touch: Object,\n    touchless: Boolean,\n    value: {\n      required: false\n    },\n    vertical: Boolean\n  },\n  data: function data() {\n    return {\n      changedByDelimiters: false,\n      internalHeight: undefined,\n      transitionHeight: undefined,\n      transitionCount: 0,\n      isBooted: false,\n      isReverse: false\n    };\n  },\n  computed: {\n    isActive: function isActive() {\n      return this.transitionCount > 0;\n    },\n    classes: function classes() {\n      return _objectSpread(_objectSpread({}, BaseItemGroup.options.computed.classes.call(this)), {}, {\n        'v-window--show-arrows-on-hover': this.showArrowsOnHover\n      });\n    },\n    computedTransition: function computedTransition() {\n      if (!this.isBooted) return '';\n      var axis = this.vertical ? 'y' : 'x';\n      var reverse = this.internalReverse ? !this.isReverse : this.isReverse;\n      var direction = reverse ? '-reverse' : '';\n      return \"v-window-\".concat(axis).concat(direction, \"-transition\");\n    },\n    hasActiveItems: function hasActiveItems() {\n      return Boolean(this.items.find(function (item) {\n        return !item.disabled;\n      }));\n    },\n    hasNext: function hasNext() {\n      return this.continuous || this.internalIndex < this.items.length - 1;\n    },\n    hasPrev: function hasPrev() {\n      return this.continuous || this.internalIndex > 0;\n    },\n    internalIndex: function internalIndex() {\n      var _this = this;\n      return this.items.findIndex(function (item, i) {\n        return _this.internalValue === _this.getValue(item, i);\n      });\n    },\n    internalReverse: function internalReverse() {\n      return this.$vuetify.rtl ? !this.reverse : this.reverse;\n    }\n  },\n  watch: {\n    internalIndex: function internalIndex(val, oldVal) {\n      this.isReverse = this.updateReverse(val, oldVal);\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n    window.requestAnimationFrame(function () {\n      return _this2.isBooted = true;\n    });\n  },\n  methods: {\n    genDefaultSlot: function genDefaultSlot() {\n      return this.$slots[\"default\"];\n    },\n    genContainer: function genContainer() {\n      var children = [this.genDefaultSlot()];\n      if (this.showArrows) {\n        children.push(this.genControlIcons());\n      }\n      return this.$createElement('div', {\n        staticClass: 'v-window__container',\n        \"class\": {\n          'v-window__container--is-active': this.isActive\n        },\n        style: {\n          height: this.internalHeight || this.transitionHeight\n        }\n      }, children);\n    },\n    genIcon: function genIcon(direction, icon, _click) {\n      var _this3 = this;\n      var _a, _b, _c;\n      var on = {\n        click: function click(e) {\n          e.stopPropagation();\n          _this3.changedByDelimiters = true;\n          _click();\n        }\n      };\n      var attrs = {\n        'aria-label': this.$vuetify.lang.t(\"$vuetify.carousel.\".concat(direction))\n      };\n      var children = (_c = (_b = (_a = this.$scopedSlots)[direction]) === null || _b === void 0 ? void 0 : _b.call(_a, {\n        on: on,\n        attrs: attrs\n      })) !== null && _c !== void 0 ? _c : [this.$createElement(VBtn, {\n        props: {\n          icon: true\n        },\n        attrs: attrs,\n        on: on\n      }, [this.$createElement(VIcon, {\n        props: {\n          large: true\n        }\n      }, icon)])];\n      return this.$createElement('div', {\n        staticClass: \"v-window__\".concat(direction)\n      }, children);\n    },\n    genControlIcons: function genControlIcons() {\n      var icons = [];\n      var prevIcon = this.$vuetify.rtl ? this.nextIcon : this.prevIcon;\n      /* istanbul ignore else */\n\n      if (this.hasPrev && prevIcon && typeof prevIcon === 'string') {\n        var icon = this.genIcon('prev', prevIcon, this.prev);\n        icon && icons.push(icon);\n      }\n      var nextIcon = this.$vuetify.rtl ? this.prevIcon : this.nextIcon;\n      /* istanbul ignore else */\n\n      if (this.hasNext && nextIcon && typeof nextIcon === 'string') {\n        var _icon = this.genIcon('next', nextIcon, this.next);\n        _icon && icons.push(_icon);\n      }\n      return icons;\n    },\n    getNextIndex: function getNextIndex(index) {\n      var nextIndex = (index + 1) % this.items.length;\n      var item = this.items[nextIndex];\n      if (item.disabled) return this.getNextIndex(nextIndex);\n      return nextIndex;\n    },\n    getPrevIndex: function getPrevIndex(index) {\n      var prevIndex = (index + this.items.length - 1) % this.items.length;\n      var item = this.items[prevIndex];\n      if (item.disabled) return this.getPrevIndex(prevIndex);\n      return prevIndex;\n    },\n    next: function next() {\n      /* istanbul ignore if */\n      if (!this.hasActiveItems || !this.hasNext) return;\n      var nextIndex = this.getNextIndex(this.internalIndex);\n      var item = this.items[nextIndex];\n      this.internalValue = this.getValue(item, nextIndex);\n    },\n    prev: function prev() {\n      /* istanbul ignore if */\n      if (!this.hasActiveItems || !this.hasPrev) return;\n      var lastIndex = this.getPrevIndex(this.internalIndex);\n      var item = this.items[lastIndex];\n      this.internalValue = this.getValue(item, lastIndex);\n    },\n    updateReverse: function updateReverse(val, oldVal) {\n      var itemsLength = this.items.length;\n      var lastIndex = itemsLength - 1;\n      if (itemsLength <= 2) return val < oldVal;\n      if (val === lastIndex && oldVal === 0) {\n        return true;\n      } else if (val === 0 && oldVal === lastIndex) {\n        return false;\n      } else {\n        return val < oldVal;\n      }\n    }\n  },\n  render: function render(h) {\n    var _this4 = this;\n    var data = {\n      staticClass: 'v-window',\n      \"class\": this.classes,\n      directives: []\n    };\n    if (!this.touchless) {\n      var value = this.touch || {\n        left: function left() {\n          _this4.$vuetify.rtl ? _this4.prev() : _this4.next();\n        },\n        right: function right() {\n          _this4.$vuetify.rtl ? _this4.next() : _this4.prev();\n        },\n        end: function end(e) {\n          e.stopPropagation();\n        },\n        start: function start(e) {\n          e.stopPropagation();\n        }\n      };\n      data.directives.push({\n        name: 'touch',\n        value: value\n      });\n    }\n    return h('div', data, [this.genContainer()]);\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
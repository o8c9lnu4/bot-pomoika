{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.string.trim.js\";\n// Types\nimport Vue from 'vue';\nexport default function VGrid(name) {\n  /* @vue/component */\n  return Vue.extend({\n    name: \"v-\".concat(name),\n    functional: true,\n    props: {\n      id: String,\n      tag: {\n        type: String,\n        \"default\": 'div'\n      }\n    },\n    render: function render(h, _ref) {\n      var props = _ref.props,\n        data = _ref.data,\n        children = _ref.children;\n      data.staticClass = \"\".concat(name, \" \").concat(data.staticClass || '').trim();\n      var attrs = data.attrs;\n      if (attrs) {\n        // reset attrs to extract utility clases like pa-3\n        data.attrs = {};\n        var classes = Object.keys(attrs).filter(function (key) {\n          // TODO: Remove once resolved\n          // https://github.com/vuejs/vue/issues/7841\n          if (key === 'slot') return false;\n          var value = attrs[key]; // add back data attributes like data-test=\"foo\" but do not\n          // add them as classes\n\n          if (key.startsWith('data-')) {\n            data.attrs[key] = value;\n            return false;\n          }\n          return value || typeof value === 'string';\n        });\n        if (classes.length) data.staticClass += \" \".concat(classes.join(' '));\n      }\n      if (props.id) {\n        data.domProps = data.domProps || {};\n        data.domProps.id = props.id;\n      }\n      return h(props.tag, data, children);\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
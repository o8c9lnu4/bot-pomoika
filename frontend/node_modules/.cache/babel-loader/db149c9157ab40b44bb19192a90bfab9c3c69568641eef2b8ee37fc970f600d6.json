{"ast":null,"code":"import _objectSpread from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable';\nimport Routable from '../../mixins/routable';\nimport Themeable from '../../mixins/themeable'; // Utilities\n\nimport { keyCodes } from './../../util/helpers';\nimport mixins from '../../util/mixins';\nvar baseMixins = mixins(Routable,\n// Must be after routable\n// to overwrite activeClass\nGroupableFactory('tabsBar'), Themeable);\nexport default baseMixins.extend().extend().extend({\n  name: 'v-tab',\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      \"default\": true\n    }\n  },\n  data: function data() {\n    return {\n      proxyClass: 'v-tab--active'\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread(_objectSpread({\n        'v-tab': true\n      }, Routable.options.computed.classes.call(this)), {}, {\n        'v-tab--disabled': this.disabled\n      }, this.groupClasses);\n    },\n    value: function value() {\n      var to = this.to || this.href;\n      if (to == null) return to;\n      if (this.$router && this.to === Object(this.to)) {\n        var resolve = this.$router.resolve(this.to, this.$route, this.append);\n        to = resolve.href;\n      }\n      return to.replace('#', '');\n    }\n  },\n  methods: {\n    click: function click(e) {\n      // Prevent keyboard actions\n      // from children elements\n      // within disabled tabs\n      if (this.disabled) {\n        e.preventDefault();\n        return;\n      } // If user provides an\n      // actual link, do not\n      // prevent default\n\n      if (this.href && this.href.indexOf('#') > -1) e.preventDefault();\n      if (e.detail) this.$el.blur();\n      this.$emit('click', e);\n      this.to || this.toggle();\n    },\n    toggle: function toggle() {\n      // VItemGroup treats a change event as a click\n      if (!this.isActive || !this.tabsBar.mandatory && !this.to) {\n        this.$emit('change');\n      }\n    }\n  },\n  render: function render(h) {\n    var _this = this;\n    var _this$generateRouteLi = this.generateRouteLink(),\n      tag = _this$generateRouteLi.tag,\n      data = _this$generateRouteLi.data;\n    data.attrs = _objectSpread(_objectSpread({}, data.attrs), {}, {\n      'aria-selected': String(this.isActive),\n      role: 'tab',\n      tabindex: this.disabled ? -1 : 0\n    });\n    data.on = _objectSpread(_objectSpread({}, data.on), {}, {\n      keydown: function keydown(e) {\n        if (e.keyCode === keyCodes.enter) _this.click(e);\n        _this.$emit('keydown', e);\n      }\n    });\n    return h(tag, data, this.$slots[\"default\"]);\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reverse.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\n// Styles\nimport \"../../../src/components/VRangeSlider/VRangeSlider.sass\"; // Components\n\nimport VSlider from '../VSlider'; // Helpers\n\nimport { addOnceEventListener, createRange, deepEqual, passiveSupported } from '../../util/helpers';\n/* @vue/component */\n\nexport default VSlider.extend({\n  name: 'v-range-slider',\n  props: {\n    value: {\n      type: Array,\n      \"default\": function _default() {\n        return [0, 0];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      activeThumb: null,\n      lazyValue: this.value\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread(_objectSpread({}, VSlider.options.computed.classes.call(this)), {}, {\n        'v-input--range-slider': true\n      });\n    },\n    internalValue: {\n      get: function get() {\n        return this.lazyValue;\n      },\n      set: function set(val) {\n        var _this = this;\n        // Round value to ensure the\n        // entire slider range can\n        // be selected with step\n        var value = val.map(function () {\n          var v = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n          return _this.roundValue(Math.min(Math.max(v, _this.minValue), _this.maxValue));\n        }); // Switch values if range and wrong order\n\n        if (value[0] > value[1] || value[1] < value[0]) {\n          if (this.activeThumb !== null) {\n            var toFocus = this.activeThumb === 1 ? 0 : 1;\n            var el = this.$refs[\"thumb_\".concat(toFocus)];\n            el.focus();\n          }\n          value = [value[1], value[0]];\n        }\n        this.lazyValue = value;\n        if (!deepEqual(value, this.value)) this.$emit('input', value);\n        this.validate();\n      }\n    },\n    inputWidth: function inputWidth() {\n      var _this2 = this;\n      return this.internalValue.map(function (v) {\n        return (_this2.roundValue(v) - _this2.minValue) / (_this2.maxValue - _this2.minValue) * 100;\n      });\n    }\n  },\n  methods: {\n    getTrackStyle: function getTrackStyle(startLength, endLength) {\n      var startPadding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var endPadding = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var startDir = this.vertical ? this.$vuetify.rtl ? 'top' : 'bottom' : this.$vuetify.rtl ? 'right' : 'left';\n      var endDir = this.vertical ? 'height' : 'width';\n      var start = \"calc(\".concat(startLength, \"% + \").concat(startPadding, \"px)\");\n      var end = \"calc(\".concat(endLength, \"% + \").concat(endPadding, \"px)\");\n      return _defineProperty(_defineProperty({\n        transition: this.trackTransition\n      }, startDir, start), endDir, end);\n    },\n    getIndexOfClosestValue: function getIndexOfClosestValue(arr, v) {\n      if (Math.abs(arr[0] - v) < Math.abs(arr[1] - v)) return 0;else return 1;\n    },\n    genInput: function genInput() {\n      var _this3 = this;\n      return createRange(2).map(function (i) {\n        var input = VSlider.options.methods.genInput.call(_this3);\n        input.data = input.data || {};\n        input.data.attrs = input.data.attrs || {};\n        input.data.attrs.value = _this3.internalValue[i];\n        input.data.attrs.id = \"input-\".concat(i ? 'max' : 'min', \"-\").concat(_this3._uid);\n        return input;\n      });\n    },\n    genTrackContainer: function genTrackContainer() {\n      var _this4 = this;\n      var children = [];\n      var padding = this.isDisabled ? 10 : 0;\n      var sections = [{\n        \"class\": 'v-slider__track-background',\n        color: this.computedTrackColor,\n        styles: [0, this.inputWidth[0], 0, -padding]\n      }, {\n        \"class\": this.isDisabled ? 'v-slider__track-background' : 'v-slider__track-fill',\n        color: this.isDisabled ? this.computedTrackColor : this.computedTrackFillColor,\n        styles: [this.inputWidth[0], Math.abs(this.inputWidth[1] - this.inputWidth[0]), padding, padding * -2]\n      }, {\n        \"class\": 'v-slider__track-background',\n        color: this.computedTrackColor,\n        styles: [this.inputWidth[1], Math.abs(100 - this.inputWidth[1]), padding, -padding]\n      }];\n      if (this.$vuetify.rtl) sections.reverse();\n      children.push.apply(children, _toConsumableArray(sections.map(function (section) {\n        return _this4.$createElement('div', _this4.setBackgroundColor(section.color, {\n          staticClass: section[\"class\"],\n          style: _this4.getTrackStyle.apply(_this4, _toConsumableArray(section.styles))\n        }));\n      })));\n      return this.$createElement('div', {\n        staticClass: 'v-slider__track-container',\n        ref: 'track'\n      }, children);\n    },\n    genChildren: function genChildren() {\n      var _this5 = this;\n      return [this.genInput(), this.genTrackContainer(), this.genSteps(), createRange(2).map(function (index) {\n        var value = _this5.internalValue[index];\n        var onFocus = function onFocus(e) {\n          _this5.isFocused = true;\n          _this5.activeThumb = index;\n          _this5.$emit('focus', e);\n        };\n        var onBlur = function onBlur(e) {\n          _this5.isFocused = false;\n          _this5.activeThumb = null;\n          _this5.$emit('blur', e);\n        };\n        var valueWidth = _this5.inputWidth[index];\n        var isActive = _this5.isActive && _this5.activeThumb === index;\n        var isFocused = _this5.isFocused && _this5.activeThumb === index;\n        return _this5.genThumbContainer(value, valueWidth, isActive, isFocused, onFocus, onBlur, \"thumb_\".concat(index));\n      })];\n    },\n    reevaluateSelected: function reevaluateSelected(value) {\n      this.activeThumb = this.getIndexOfClosestValue(this.internalValue, value);\n      var refName = \"thumb_\".concat(this.activeThumb);\n      var thumbRef = this.$refs[refName];\n      thumbRef.focus();\n    },\n    onSliderMouseDown: function onSliderMouseDown(e) {\n      var _this6 = this;\n      var _a;\n      var value = this.parseMouseMove(e);\n      this.reevaluateSelected(value);\n      this.oldValue = this.internalValue;\n      this.isActive = true;\n      if ((_a = e.target) === null || _a === void 0 ? void 0 : _a.matches('.v-slider__thumb-container, .v-slider__thumb-container *')) {\n        this.thumbPressed = true;\n        var domRect = e.target.getBoundingClientRect();\n        var touch = 'touches' in e ? e.touches[0] : e;\n        this.startOffset = this.vertical ? touch.clientY - (domRect.top + domRect.height / 2) : touch.clientX - (domRect.left + domRect.width / 2);\n      } else {\n        this.startOffset = 0;\n        window.clearTimeout(this.mouseTimeout);\n        this.mouseTimeout = window.setTimeout(function () {\n          _this6.thumbPressed = true;\n        }, 300);\n      }\n      var mouseUpOptions = passiveSupported ? {\n        passive: true,\n        capture: true\n      } : true;\n      var mouseMoveOptions = passiveSupported ? {\n        passive: true\n      } : false;\n      var isTouchEvent = 'touches' in e;\n      this.onMouseMove(e);\n      this.app.addEventListener(isTouchEvent ? 'touchmove' : 'mousemove', this.onMouseMove, mouseMoveOptions);\n      addOnceEventListener(this.app, isTouchEvent ? 'touchend' : 'mouseup', this.onSliderMouseUp, mouseUpOptions);\n      this.$emit('start', this.internalValue);\n    },\n    onSliderClick: function onSliderClick(e) {\n      if (!this.isActive) {\n        if (this.noClick) {\n          this.noClick = false;\n          return;\n        }\n        var value = this.parseMouseMove(e);\n        this.reevaluateSelected(value);\n        this.setInternalValue(value);\n        this.$emit('change', this.internalValue);\n      }\n    },\n    onMouseMove: function onMouseMove(e) {\n      var value = this.parseMouseMove(e);\n      if (e.type === 'mousemove') {\n        this.thumbPressed = true;\n      }\n      if (this.activeThumb === null) {\n        this.activeThumb = this.getIndexOfClosestValue(this.internalValue, value);\n      }\n      this.setInternalValue(value);\n    },\n    onKeyDown: function onKeyDown(e) {\n      if (this.activeThumb === null) return;\n      var value = this.parseKeyDown(e, this.internalValue[this.activeThumb]);\n      if (value == null) return;\n      this.setInternalValue(value);\n      this.$emit('change', this.internalValue);\n    },\n    setInternalValue: function setInternalValue(value) {\n      var _this7 = this;\n      this.internalValue = this.internalValue.map(function (v, i) {\n        if (i === _this7.activeThumb) return value;else return Number(v);\n      });\n    }\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
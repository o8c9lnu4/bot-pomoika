{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport mixins from '../../util/mixins';\nimport header from './mixins/header';\nimport { wrapInArray, convertToUnit } from '../../util/helpers';\nexport default mixins(header).extend({\n  name: 'v-data-table-header-desktop',\n  methods: {\n    genGroupByToggle: function genGroupByToggle(header) {\n      var _this = this;\n      return this.$createElement('span', {\n        on: {\n          click: function click(e) {\n            e.stopPropagation();\n            _this.$emit('group', header.value);\n          }\n        }\n      }, ['group']);\n    },\n    getAria: function getAria(beingSorted, isDesc) {\n      var _this2 = this;\n      var $t = function $t(key) {\n        return _this2.$vuetify.lang.t(\"$vuetify.dataTable.ariaLabel.\".concat(key));\n      };\n      var ariaSort = 'none';\n      var ariaLabel = [$t('sortNone'), $t('activateAscending')];\n      if (!beingSorted) {\n        return {\n          ariaSort: ariaSort,\n          ariaLabel: ariaLabel.join(' ')\n        };\n      }\n      if (isDesc) {\n        ariaSort = 'descending';\n        ariaLabel = [$t('sortDescending'), $t(this.options.mustSort ? 'activateAscending' : 'activateNone')];\n      } else {\n        ariaSort = 'ascending';\n        ariaLabel = [$t('sortAscending'), $t('activateDescending')];\n      }\n      return {\n        ariaSort: ariaSort,\n        ariaLabel: ariaLabel.join(' ')\n      };\n    },\n    genHeader: function genHeader(header) {\n      var _this3 = this;\n      var data = {\n        attrs: {\n          role: 'columnheader',\n          scope: 'col',\n          'aria-label': header.text || ''\n        },\n        style: {\n          width: convertToUnit(header.width),\n          minWidth: convertToUnit(header.width)\n        },\n        \"class\": [\"text-\".concat(header.align || 'start')].concat(_toConsumableArray(wrapInArray(header[\"class\"])), [header.divider && 'v-data-table__divider']),\n        on: {}\n      };\n      var children = [];\n      if (header.value === 'data-table-select' && !this.singleSelect) {\n        return this.$createElement('th', data, [this.genSelectAll()]);\n      }\n      children.push(this.$scopedSlots.hasOwnProperty(header.value) ? this.$scopedSlots[header.value]({\n        header: header\n      }) : this.$createElement('span', [header.text]));\n      if (!this.disableSort && (header.sortable || !header.hasOwnProperty('sortable'))) {\n        data.on.click = function () {\n          return _this3.$emit('sort', header.value);\n        };\n        var sortIndex = this.options.sortBy.findIndex(function (k) {\n          return k === header.value;\n        });\n        var beingSorted = sortIndex >= 0;\n        var isDesc = this.options.sortDesc[sortIndex];\n        data[\"class\"].push('sortable');\n        var _this$getAria = this.getAria(beingSorted, isDesc),\n          ariaLabel = _this$getAria.ariaLabel,\n          ariaSort = _this$getAria.ariaSort;\n        data.attrs['aria-label'] += \"\".concat(header.text ? ': ' : '').concat(ariaLabel);\n        data.attrs['aria-sort'] = ariaSort;\n        if (beingSorted) {\n          data[\"class\"].push('active');\n          data[\"class\"].push(isDesc ? 'desc' : 'asc');\n        }\n        if (header.align === 'end') children.unshift(this.genSortIcon());else children.push(this.genSortIcon());\n        if (this.options.multiSort && beingSorted) {\n          children.push(this.$createElement('span', {\n            \"class\": 'v-data-table-header__sort-badge'\n          }, [String(sortIndex + 1)]));\n        }\n      }\n      if (this.showGroupBy && header.groupable !== false) children.push(this.genGroupByToggle(header));\n      return this.$createElement('th', data, children);\n    }\n  },\n  render: function render() {\n    var _this4 = this;\n    return this.$createElement('thead', {\n      staticClass: 'v-data-table-header'\n    }, [this.$createElement('tr', this.headers.map(function (header) {\n      return _this4.genHeader(header);\n    }))]);\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _typeof from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _asyncToGenerator from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport axios from 'axios';\nexport default {\n  name: 'AdminLogin',\n  data: function data() {\n    return {\n      form: {\n        username: '',\n        password: ''\n      },\n      errors: {},\n      loading: false\n    };\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, user;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.loading = true;\n              _this.errors = {};\n              _context.prev = 2;\n              _context.next = 5;\n              return axios.post('/api/auth/login/', _this.form);\n            case 5:\n              response = _context.sent;\n              if (!response.data.message) {\n                _context.next = 16;\n                break;\n              }\n              user = response.data.user; // Проверяем, является ли пользователь администратором\n              if (user.is_staff) {\n                _context.next = 11;\n                break;\n              }\n              _this.$toast.error('У вас нет прав доступа к админке');\n              return _context.abrupt(\"return\");\n            case 11:\n              // Сохраняем информацию о пользователе\n              localStorage.setItem('admin_user', JSON.stringify(user));\n              localStorage.setItem('is_admin', 'true');\n              localStorage.setItem('admin_token', Date.now().toString()); // Простой токен\n\n              _this.$toast.success('Добро пожаловать в админку!');\n              _this.$router.push('/admin');\n            case 16:\n              _context.next = 21;\n              break;\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](2);\n              if (_context.t0.response && _context.t0.response.data) {\n                if (_typeof(_context.t0.response.data) === 'object') {\n                  _this.errors = _context.t0.response.data;\n                } else {\n                  _this.$toast.error(_context.t0.response.data);\n                }\n              } else {\n                _this.$toast.error('Ошибка при входе в систему');\n              }\n            case 21:\n              _context.prev = 21;\n              _this.loading = false;\n              return _context.finish(21);\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 18, 21, 24]]);\n      }))();\n    }\n  },\n  mounted: function mounted() {\n    // Проверяем, не авторизован ли уже пользователь\n    if (localStorage.getItem('is_admin') === 'true') {\n      this.$router.push('/admin');\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
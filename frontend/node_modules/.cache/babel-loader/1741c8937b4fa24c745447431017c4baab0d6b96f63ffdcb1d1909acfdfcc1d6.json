{"ast":null,"code":"import OurVue from 'vue';\nimport { consoleError } from './util/console';\nexport function install(Vue) {\n  var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (install.installed) return;\n  install.installed = true;\n  if (OurVue !== Vue) {\n    consoleError(\"Multiple instances of Vue detected\\nSee https://github.com/vuetifyjs/vuetify/issues/4068\\n\\nIf you're seeing \\\"$attrs is readonly\\\", it's caused by this\");\n  }\n  var components = args.components || {};\n  var directives = args.directives || {};\n  for (var name in directives) {\n    var directive = directives[name];\n    Vue.directive(name, directive);\n  }\n  (function registerComponents(components) {\n    if (components) {\n      for (var key in components) {\n        var component = components[key];\n        if (component && !registerComponents(component.$_vuetify_subcomponents)) {\n          Vue.component(key, component);\n        }\n      }\n      return true;\n    }\n    return false;\n  })(components); // Used to avoid multiple mixins being setup\n  // when in dev mode and hot module reload\n  // https://github.com/vuejs/vue/issues/5089#issuecomment-284260111\n\n  if (Vue.$_vuetify_installed) return;\n  Vue.$_vuetify_installed = true;\n  Vue.mixin({\n    beforeCreate: function beforeCreate() {\n      var options = this.$options;\n      if (options.vuetify) {\n        options.vuetify.init(this, this.$ssrContext);\n        this.$vuetify = Vue.observable(options.vuetify.framework);\n      } else {\n        this.$vuetify = options.parent && options.parent.$vuetify || this;\n      }\n    },\n    beforeMount: function beforeMount() {\n      // @ts-ignore\n      if (this.$options.vuetify && this.$el && this.$el.hasAttribute('data-server-rendered')) {\n        // @ts-ignore\n        this.$vuetify.isHydrating = true; // @ts-ignore\n\n        this.$vuetify.breakpoint.update(true);\n      }\n    },\n    mounted: function mounted() {\n      // @ts-ignore\n      if (this.$options.vuetify && this.$vuetify.isHydrating) {\n        // @ts-ignore\n        this.$vuetify.isHydrating = false; // @ts-ignore\n\n        this.$vuetify.breakpoint.update();\n      }\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
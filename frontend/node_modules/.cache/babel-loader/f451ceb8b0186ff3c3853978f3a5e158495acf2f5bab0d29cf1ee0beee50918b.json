{"ast":null,"code":"import Vue from 'vue';\n/**\n * This mixin provides `attrs$` and `listeners$` to work around\n * vue bug https://github.com/vuejs/vue/issues/10115\n */\n\nfunction makeWatcher(property) {\n  return function (val, oldVal) {\n    for (var attr in oldVal) {\n      if (!Object.prototype.hasOwnProperty.call(val, attr)) {\n        this.$delete(this.$data[property], attr);\n      }\n    }\n    for (var _attr in val) {\n      this.$set(this.$data[property], _attr, val[_attr]);\n    }\n  };\n}\nexport default Vue.extend({\n  data: function data() {\n    return {\n      attrs$: {},\n      listeners$: {}\n    };\n  },\n  created: function created() {\n    // Work around unwanted re-renders: https://github.com/vuejs/vue/issues/10115\n    // Make sure to use `attrs$` instead of `$attrs` (confusing right?)\n    this.$watch('$attrs', makeWatcher('attrs$'), {\n      immediate: true\n    });\n    this.$watch('$listeners', makeWatcher('listeners$'), {\n      immediate: true\n    });\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _slicedToArray from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _asyncToGenerator from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport axios from 'axios';\nexport default {\n  name: 'AdminDashboard',\n  data: function data() {\n    return {\n      loading: false,\n      stats: {\n        totalPosts: 0,\n        publishedPosts: 0,\n        totalUsers: 0,\n        adminUsers: 0,\n        todayPosts: 0,\n        weekPosts: 0\n      },\n      recentPosts: [],\n      headers: [{\n        text: 'Заголовок',\n        value: 'title'\n      }, {\n        text: 'Автор',\n        value: 'author'\n      }, {\n        text: 'Дата публикации',\n        value: 'published_date'\n      }, {\n        text: 'Действия',\n        value: 'actions',\n        sortable: false\n      }]\n    };\n  },\n  methods: {\n    loadStats: function loadStats() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _yield$Promise$all, _yield$Promise$all2, postsResponse, usersResponse, posts, users, now, today, weekAgo;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.loading = true;\n              _context.prev = 1;\n              _context.next = 4;\n              return Promise.all([axios.get('/api/posts/'), axios.get('/api/users/')]);\n            case 4:\n              _yield$Promise$all = _context.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n              postsResponse = _yield$Promise$all2[0];\n              usersResponse = _yield$Promise$all2[1];\n              posts = postsResponse.data;\n              users = usersResponse.data; // Общая статистика постов\n              _this.stats.totalPosts = posts.length;\n              _this.stats.publishedPosts = posts.filter(function (post) {\n                return post.published_date;\n              }).length;\n\n              // Статистика пользователей\n              _this.stats.totalUsers = users.length;\n              _this.stats.adminUsers = users.filter(function (user) {\n                return user.is_staff;\n              }).length;\n\n              // Статистика по времени\n              now = new Date();\n              today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n              weekAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);\n              _this.stats.todayPosts = posts.filter(function (post) {\n                var postDate = new Date(post.created_date);\n                return postDate >= today;\n              }).length;\n              _this.stats.weekPosts = posts.filter(function (post) {\n                var postDate = new Date(post.created_date);\n                return postDate >= weekAgo;\n              }).length;\n\n              // Загружаем последние посты\n              _this.recentPosts = posts.sort(function (a, b) {\n                return new Date(b.created_date) - new Date(a.created_date);\n              }).slice(0, 5);\n              _context.next = 26;\n              break;\n            case 22:\n              _context.prev = 22;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('Ошибка загрузки статистики:', _context.t0);\n              _this.$toast.error('Ошибка загрузки статистики');\n            case 26:\n              _context.prev = 26;\n              _this.loading = false;\n              return _context.finish(26);\n            case 29:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 22, 26, 29]]);\n      }))();\n    },\n    formatDate: function formatDate(dateString) {\n      if (!dateString) return 'Не опубликован';\n      return new Date(dateString).toLocaleDateString('ru-RU');\n    }\n  },\n  mounted: function mounted() {\n    this.loadStats();\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
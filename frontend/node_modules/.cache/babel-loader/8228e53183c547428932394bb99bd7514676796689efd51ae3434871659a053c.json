{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/web.timers.js\";\nimport axios from 'axios';\nexport default {\n  name: 'PostDetail',\n  props: {\n    id: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      post: null,\n      loading: false\n    };\n  },\n  methods: {\n    fetchPost: function fetchPost() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.loading = true;\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.get(\"/api/posts/\".concat(_this.id, \"/\"));\n            case 4:\n              response = _context.sent;\n              _this.post = response.data;\n              _context.next = 12;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('Error fetching post:', _context.t0);\n              _this.post = null;\n            case 12:\n              _context.prev = 12;\n              setTimeout(function () {\n                _this.loading = false;\n              }, 500);\n              return _context.finish(12);\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 8, 12, 15]]);\n      }))();\n    },\n    formatDate: function formatDate(date) {\n      return new Date(date).toLocaleString('ru-RU', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    getReadingTime: function getReadingTime() {\n      var _this$post;\n      if (!((_this$post = this.post) !== null && _this$post !== void 0 && _this$post.content)) return 1;\n      var words = this.post.content.trim().split(/\\s+/).length;\n      return Math.max(1, Math.ceil(words / 200));\n    },\n    sharePost: function sharePost() {\n      if (navigator.share) {\n        navigator.share({\n          title: this.post.title,\n          text: this.post.content.substring(0, 100) + '...',\n          url: window.location.href\n        });\n      }\n    }\n  },\n  created: function created() {\n    this.fetchPost();\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { checkCollinear, getDistance, moveTo } from './math';\n/**\n * From https://github.com/unsplash/react-trend/blob/master/src/helpers/DOM.helpers.js#L18\n */\n\nexport function genPath(points, radius) {\n  var fill = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var height = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 75;\n  var start = points.shift();\n  var end = points[points.length - 1];\n  return (fill ? \"M\".concat(start.x, \" \").concat(height - start.x + 2, \" L\").concat(start.x, \" \").concat(start.y) : \"M\".concat(start.x, \" \").concat(start.y)) + points.map(function (point, index) {\n    var next = points[index + 1];\n    var prev = points[index - 1] || start;\n    var isCollinear = next && checkCollinear(next, point, prev);\n    if (!next || isCollinear) {\n      return \"L\".concat(point.x, \" \").concat(point.y);\n    }\n    var threshold = Math.min(getDistance(prev, point), getDistance(next, point));\n    var isTooCloseForRadius = threshold / 2 < radius;\n    var radiusForPoint = isTooCloseForRadius ? threshold / 2 : radius;\n    var before = moveTo(prev, point, radiusForPoint);\n    var after = moveTo(next, point, radiusForPoint);\n    return \"L\".concat(before.x, \" \").concat(before.y, \"S\").concat(point.x, \" \").concat(point.y, \" \").concat(after.x, \" \").concat(after.y);\n  }).join('') + (fill ? \"L\".concat(end.x, \" \").concat(height - start.x + 2, \" Z\") : '');\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
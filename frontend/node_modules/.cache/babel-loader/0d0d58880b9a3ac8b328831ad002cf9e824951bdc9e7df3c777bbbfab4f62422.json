{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/web.timers.js\";\nimport Vue from 'vue';\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\n\nexport default Vue.extend().extend({\n  name: 'delayable',\n  props: {\n    openDelay: {\n      type: [Number, String],\n      \"default\": 0\n    },\n    closeDelay: {\n      type: [Number, String],\n      \"default\": 0\n    }\n  },\n  data: function data() {\n    return {\n      openTimeout: undefined,\n      closeTimeout: undefined\n    };\n  },\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay: function clearDelay() {\n      clearTimeout(this.openTimeout);\n      clearTimeout(this.closeTimeout);\n    },\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay: function runDelay(type, cb) {\n      var _this = this;\n      this.clearDelay();\n      var delay = parseInt(this[\"\".concat(type, \"Delay\")], 10);\n      this[\"\".concat(type, \"Timeout\")] = setTimeout(cb || function () {\n        _this.isActive = {\n          open: true,\n          close: false\n        }[type];\n      }, delay);\n    }\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
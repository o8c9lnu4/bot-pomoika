{"ast":null,"code":"import \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n// Components\nimport VIcon from '../VIcon'; // Mixins\n\nimport Colorable from '../../mixins/colorable';\nimport { inject as RegistrableInject } from '../../mixins/registrable'; // Directives\n\nimport ripple from '../../directives/ripple'; // Utilities\n\nimport mixins from '../../util/mixins';\nimport { keyCodes } from '../../util/helpers';\nvar baseMixins = mixins(Colorable, RegistrableInject('stepper', 'v-stepper-step', 'v-stepper'));\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-stepper-step',\n  directives: {\n    ripple: ripple\n  },\n  inject: ['stepClick'],\n  props: {\n    color: {\n      type: String,\n      \"default\": 'primary'\n    },\n    complete: Boolean,\n    completeIcon: {\n      type: String,\n      \"default\": '$complete'\n    },\n    editable: Boolean,\n    editIcon: {\n      type: String,\n      \"default\": '$edit'\n    },\n    errorIcon: {\n      type: String,\n      \"default\": '$error'\n    },\n    rules: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    },\n    step: [Number, String]\n  },\n  data: function data() {\n    return {\n      isActive: false,\n      isInactive: true\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return {\n        'v-stepper__step--active': this.isActive,\n        'v-stepper__step--editable': this.editable,\n        'v-stepper__step--inactive': this.isInactive,\n        'v-stepper__step--error error--text': this.hasError,\n        'v-stepper__step--complete': this.complete\n      };\n    },\n    hasError: function hasError() {\n      return this.rules.some(function (validate) {\n        return validate() !== true;\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.stepper && this.stepper.register(this);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.stepper && this.stepper.unregister(this);\n  },\n  methods: {\n    click: function click(e) {\n      e.stopPropagation();\n      this.$emit('click', e);\n      if (this.editable) {\n        this.stepClick(this.step);\n      }\n    },\n    genIcon: function genIcon(icon) {\n      return this.$createElement(VIcon, icon);\n    },\n    genLabel: function genLabel() {\n      return this.$createElement('div', {\n        staticClass: 'v-stepper__label'\n      }, this.$slots[\"default\"]);\n    },\n    genStep: function genStep() {\n      var color = !this.hasError && (this.complete || this.isActive) ? this.color : false;\n      return this.$createElement('span', this.setBackgroundColor(color, {\n        staticClass: 'v-stepper__step__step'\n      }), this.genStepContent());\n    },\n    genStepContent: function genStepContent() {\n      var children = [];\n      if (this.hasError) {\n        children.push(this.genIcon(this.errorIcon));\n      } else if (this.complete) {\n        if (this.editable) {\n          children.push(this.genIcon(this.editIcon));\n        } else {\n          children.push(this.genIcon(this.completeIcon));\n        }\n      } else {\n        children.push(String(this.step));\n      }\n      return children;\n    },\n    keyboardClick: function keyboardClick(e) {\n      if (e.keyCode === keyCodes.space) {\n        this.click(e);\n      }\n    },\n    toggle: function toggle(step) {\n      this.isActive = step.toString() === this.step.toString();\n      this.isInactive = Number(step) < Number(this.step);\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      attrs: {\n        tabindex: this.editable ? 0 : -1\n      },\n      staticClass: 'v-stepper__step',\n      \"class\": this.classes,\n      directives: [{\n        name: 'ripple',\n        value: this.editable\n      }],\n      on: {\n        click: this.click,\n        keydown: this.keyboardClick\n      }\n    }, [this.genStep(), this.genLabel()]);\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
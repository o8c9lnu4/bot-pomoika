{"ast":null,"code":"import _classCallCheck from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { install } from './install'; // Services\n\nimport * as services from './services';\nvar Vuetify = /*#__PURE__*/function () {\n  function Vuetify() {\n    var userPreset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, Vuetify);\n    this.framework = {\n      isHydrating: false\n    };\n    this.installed = [];\n    this.preset = {};\n    this.userPreset = {};\n    this.userPreset = userPreset;\n    this.use(services.Presets);\n    this.use(services.Application);\n    this.use(services.Breakpoint);\n    this.use(services.Goto);\n    this.use(services.Icons);\n    this.use(services.Lang);\n    this.use(services.Theme);\n  } // Called on the new vuetify instance\n  // bootstrap in install beforeCreate\n  // Exposes ssrContext if available\n  return _createClass(Vuetify, [{\n    key: \"init\",\n    value: function init(root, ssrContext) {\n      var _this = this;\n      this.installed.forEach(function (property) {\n        var service = _this.framework[property];\n        service.framework = _this.framework;\n        service.init(root, ssrContext);\n      }); // rtl is not installed and\n      // will never be called by\n      // the init process\n\n      this.framework.rtl = Boolean(this.preset.rtl);\n    } // Instantiate a VuetifyService\n  }, {\n    key: \"use\",\n    value: function use(Service) {\n      var property = Service.property;\n      if (this.installed.includes(property)) return; // TODO maybe a specific type for arg 2?\n\n      this.framework[property] = new Service(this.preset, this);\n      this.installed.push(property);\n    }\n  }]);\n}();\nexport { Vuetify as default };\nVuetify.install = install;\nVuetify.installed = false;\nVuetify.version = \"2.6.13\";\nVuetify.config = {\n  silent: false\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
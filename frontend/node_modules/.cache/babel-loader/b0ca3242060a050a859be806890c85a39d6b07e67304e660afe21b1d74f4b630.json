{"ast":null,"code":"import { parseTimestamp, getDayIdentifier, getTimestampIdentifier, isTimedless, updateHasTime } from './timestamp';\nexport function parseEvent(input, index, startProperty, endProperty) {\n  var timed = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var category = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var startInput = input[startProperty];\n  var endInput = input[endProperty];\n  var startParsed = parseTimestamp(startInput, true);\n  var endParsed = endInput ? parseTimestamp(endInput, true) : startParsed;\n  var start = isTimedless(startInput) ? updateHasTime(startParsed, timed) : startParsed;\n  var end = isTimedless(endInput) ? updateHasTime(endParsed, timed) : endParsed;\n  var startIdentifier = getDayIdentifier(start);\n  var startTimestampIdentifier = getTimestampIdentifier(start);\n  var endIdentifier = getDayIdentifier(end);\n  var endOffset = start.hasTime ? 0 : 2359;\n  var endTimestampIdentifier = getTimestampIdentifier(end) + endOffset;\n  var allDay = !start.hasTime;\n  return {\n    input: input,\n    start: start,\n    startIdentifier: startIdentifier,\n    startTimestampIdentifier: startTimestampIdentifier,\n    end: end,\n    endIdentifier: endIdentifier,\n    endTimestampIdentifier: endTimestampIdentifier,\n    allDay: allDay,\n    index: index,\n    category: category\n  };\n}\nexport function isEventOn(event, dayIdentifier) {\n  return dayIdentifier >= event.startIdentifier && dayIdentifier <= event.endIdentifier;\n}\nexport function isEventHiddenOn(event, day) {\n  return event.end.time === '00:00' && event.end.date === day.date && event.start.date !== day.date;\n}\nexport function isEventStart(event, day, dayIdentifier, firstWeekday) {\n  return dayIdentifier === event.startIdentifier || firstWeekday === day.weekday && isEventOn(event, dayIdentifier);\n}\nexport function isEventOverlapping(event, startIdentifier, endIdentifier) {\n  return startIdentifier <= event.endIdentifier && endIdentifier >= event.startIdentifier;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
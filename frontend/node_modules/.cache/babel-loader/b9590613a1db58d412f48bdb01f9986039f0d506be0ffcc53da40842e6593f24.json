{"ast":null,"code":"import _typeof from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nfunction inserted(el, binding, vnode) {\n  if (typeof window === 'undefined' || !('IntersectionObserver' in window)) return;\n  var modifiers = binding.modifiers || {};\n  var value = binding.value;\n  var _ref = _typeof(value) === 'object' ? value : {\n      handler: value,\n      options: {}\n    },\n    handler = _ref.handler,\n    options = _ref.options;\n  var observer = new IntersectionObserver(function () {\n    var entries = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var observer = arguments.length > 1 ? arguments[1] : undefined;\n    var _a;\n    var _observe = (_a = el._observe) === null || _a === void 0 ? void 0 : _a[vnode.context._uid];\n    if (!_observe) return; // Just in case, should never fire\n\n    var isIntersecting = entries.some(function (entry) {\n      return entry.isIntersecting;\n    }); // If is not quiet or has already been\n    // initted, invoke the user callback\n\n    if (handler && (!modifiers.quiet || _observe.init) && (!modifiers.once || isIntersecting || _observe.init)) {\n      handler(entries, observer, isIntersecting);\n    }\n    if (isIntersecting && modifiers.once) unbind(el, binding, vnode);else _observe.init = true;\n  }, options);\n  el._observe = Object(el._observe);\n  el._observe[vnode.context._uid] = {\n    init: false,\n    observer: observer\n  };\n  observer.observe(el);\n}\nfunction unbind(el, binding, vnode) {\n  var _a;\n  var observe = (_a = el._observe) === null || _a === void 0 ? void 0 : _a[vnode.context._uid];\n  if (!observe) return;\n  observe.observer.unobserve(el);\n  delete el._observe[vnode.context._uid];\n}\nexport var Intersect = {\n  inserted: inserted,\n  unbind: unbind\n};\nexport default Intersect;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
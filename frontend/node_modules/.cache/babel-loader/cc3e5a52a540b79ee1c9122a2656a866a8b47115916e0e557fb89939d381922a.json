{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\nimport axios from 'axios';\nexport default {\n  name: 'PostList',\n  data: function data() {\n    return {\n      posts: [],\n      currentPage: 1,\n      totalPages: 1,\n      loading: false\n    };\n  },\n  methods: {\n    fetchPosts: function fetchPosts() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.loading = true;\n              _context.prev = 1;\n              console.log('Fetching posts from:', \"/api/posts/?page=\".concat(_this.currentPage));\n              _context.next = 5;\n              return axios.get(\"/api/posts/?page=\".concat(_this.currentPage));\n            case 5:\n              response = _context.sent;\n              console.log('API Response:', response.data);\n              _this.posts = response.data.results;\n              _this.totalPages = Math.ceil(response.data.count / 10);\n              _context.next = 16;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('Error fetching posts:', _context.t0);\n              console.error('Error details:', {\n                message: _context.t0.message,\n                response: _context.t0.response ? {\n                  status: _context.t0.response.status,\n                  data: _context.t0.response.data\n                } : 'No response',\n                config: {\n                  url: _context.t0.config.url,\n                  method: _context.t0.config.method,\n                  baseURL: _context.t0.config.baseURL\n                }\n              });\n              // Показываем ошибку в Telegram\n              if (window.Telegram && window.Telegram.WebApp) {\n                window.Telegram.WebApp.showAlert('Ошибка загрузки данных');\n              }\n            case 16:\n              _context.prev = 16;\n              setTimeout(function () {\n                _this.loading = false;\n              }, 500);\n              return _context.finish(16);\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 11, 16, 19]]);\n      }))();\n    },\n    formatDate: function formatDate(date) {\n      return new Date(date).toLocaleString('ru-RU', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric'\n      });\n    },\n    goToPost: function goToPost(postId) {\n      this.$router.push({\n        name: 'PostDetail',\n        params: {\n          id: postId\n        }\n      });\n    }\n  },\n  watch: {\n    currentPage: function currentPage() {\n      this.fetchPosts();\n    }\n  },\n  created: function created() {\n    this.fetchPosts();\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n    // Слушаем событие обновления данных\n    this.$root.$on('refresh-data', function () {\n      _this2.fetchPosts();\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
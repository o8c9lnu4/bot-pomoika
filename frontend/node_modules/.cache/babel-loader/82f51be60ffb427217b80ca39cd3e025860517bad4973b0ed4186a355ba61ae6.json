{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"C:/Users/Admin/Desktop/pomoika vape lab/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"title\"];\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n// Styles\nimport \"../../../src/components/VCheckbox/VCheckbox.sass\";\nimport \"../../../src/styles/components/_selection-controls.sass\"; // Components\n\nimport VIcon from '../VIcon';\nimport VInput from '../VInput'; // Mixins\n\nimport Selectable from '../../mixins/selectable';\n/* @vue/component */\n\nexport default Selectable.extend({\n  name: 'v-checkbox',\n  props: {\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      \"default\": '$checkboxIndeterminate'\n    },\n    offIcon: {\n      type: String,\n      \"default\": '$checkboxOff'\n    },\n    onIcon: {\n      type: String,\n      \"default\": '$checkboxOn'\n    }\n  },\n  data: function data() {\n    return {\n      inputIndeterminate: this.indeterminate\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread(_objectSpread({}, VInput.options.computed.classes.call(this)), {}, {\n        'v-input--selection-controls': true,\n        'v-input--checkbox': true,\n        'v-input--indeterminate': this.inputIndeterminate\n      });\n    },\n    computedIcon: function computedIcon() {\n      if (this.inputIndeterminate) {\n        return this.indeterminateIcon;\n      } else if (this.isActive) {\n        return this.onIcon;\n      } else {\n        return this.offIcon;\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState: function validationState() {\n      if (this.isDisabled && !this.inputIndeterminate) return undefined;\n      if (this.hasError && this.shouldValidate) return 'error';\n      if (this.hasSuccess) return 'success';\n      if (this.hasColor !== null) return this.computedColor;\n      return undefined;\n    }\n  },\n  watch: {\n    indeterminate: function indeterminate(val) {\n      var _this = this;\n      // https://github.com/vuetifyjs/vuetify/issues/8270\n      this.$nextTick(function () {\n        return _this.inputIndeterminate = val;\n      });\n    },\n    inputIndeterminate: function inputIndeterminate(val) {\n      this.$emit('update:indeterminate', val);\n    },\n    isActive: function isActive() {\n      if (!this.indeterminate) return;\n      this.inputIndeterminate = false;\n    }\n  },\n  methods: {\n    genCheckbox: function genCheckbox() {\n      var _this$attrs$ = this.attrs$,\n        title = _this$attrs$.title,\n        checkboxAttrs = _objectWithoutProperties(_this$attrs$, _excluded);\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input'\n      }, [this.$createElement(VIcon, this.setTextColor(this.validationState, {\n        props: {\n          dense: this.dense,\n          dark: this.dark,\n          light: this.light\n        }\n      }), this.computedIcon), this.genInput('checkbox', _objectSpread(_objectSpread({}, checkboxAttrs), {}, {\n        'aria-checked': this.inputIndeterminate ? 'mixed' : this.isActive.toString()\n      })), this.genRipple(this.setTextColor(this.rippleState))]);\n    },\n    genDefaultSlot: function genDefaultSlot() {\n      return [this.genCheckbox(), this.genLabel()];\n    }\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.is-array.js\";\n// Mixins\nimport Delayable from '../../mixins/delayable';\nimport Toggleable from '../../mixins/toggleable'; // Utilities\n\nimport mixins from '../../util/mixins';\nimport { consoleWarn } from '../../util/console';\nexport default mixins(Delayable, Toggleable\n/* @vue/component */).extend({\n  name: 'v-hover',\n  props: {\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    value: {\n      type: Boolean,\n      \"default\": undefined\n    }\n  },\n  methods: {\n    onMouseEnter: function onMouseEnter() {\n      this.runDelay('open');\n    },\n    onMouseLeave: function onMouseLeave() {\n      this.runDelay('close');\n    }\n  },\n  render: function render() {\n    if (!this.$scopedSlots[\"default\"] && this.value === undefined) {\n      consoleWarn('v-hover is missing a default scopedSlot or bound value', this);\n      return null;\n    }\n    var element;\n    /* istanbul ignore else */\n\n    if (this.$scopedSlots[\"default\"]) {\n      element = this.$scopedSlots[\"default\"]({\n        hover: this.isActive\n      });\n    }\n    if (Array.isArray(element) && element.length === 1) {\n      element = element[0];\n    }\n    if (!element || Array.isArray(element) || !element.tag) {\n      consoleWarn('v-hover should only contain a single element', this);\n      return element;\n    }\n    if (!this.disabled) {\n      element.data = element.data || {};\n      this._g(element.data, {\n        mouseenter: this.onMouseEnter,\n        mouseleave: this.onMouseLeave\n      });\n    }\n    return element;\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
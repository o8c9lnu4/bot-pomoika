{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.math.sign.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\n// Mixins\nimport DatePickerTable from './mixins/date-picker-table'; // Utils\n\nimport { weekNumber } from '../../util/dateTimeUtils';\nimport { pad, createNativeLocaleFormatter, monthChange } from './util';\nimport { createRange } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nexport default mixins(DatePickerTable\n/* @vue/component */).extend({\n  name: 'v-date-picker-date-table',\n  props: {\n    firstDayOfWeek: {\n      type: [String, Number],\n      \"default\": 0\n    },\n    localeFirstDayOfYear: {\n      type: [String, Number],\n      \"default\": 0\n    },\n    showAdjacentMonths: Boolean,\n    showWeek: Boolean,\n    weekdayFormat: Function\n  },\n  computed: {\n    formatter: function formatter() {\n      return this.format || createNativeLocaleFormatter(this.currentLocale, {\n        day: 'numeric',\n        timeZone: 'UTC'\n      }, {\n        start: 8,\n        length: 2\n      });\n    },\n    weekdayFormatter: function weekdayFormatter() {\n      return this.weekdayFormat || createNativeLocaleFormatter(this.currentLocale, {\n        weekday: 'narrow',\n        timeZone: 'UTC'\n      });\n    },\n    weekDays: function weekDays() {\n      var _this = this;\n      var first = parseInt(this.firstDayOfWeek, 10);\n      return this.weekdayFormatter ? createRange(7).map(function (i) {\n        return _this.weekdayFormatter(\"2017-01-\".concat(first + i + 15));\n      }) // 2017-01-15 is Sunday\n      : createRange(7).map(function (i) {\n        return ['S', 'M', 'T', 'W', 'T', 'F', 'S'][(i + first) % 7];\n      });\n    }\n  },\n  methods: {\n    calculateTableDate: function calculateTableDate(delta) {\n      return monthChange(this.tableDate, Math.sign(delta || 1));\n    },\n    genTHead: function genTHead() {\n      var _this2 = this;\n      var days = this.weekDays.map(function (day) {\n        return _this2.$createElement('th', day);\n      });\n      if (this.showWeek) {\n        days.unshift(this.$createElement('th'));\n      }\n      return this.$createElement('thead', this.genTR(days));\n    },\n    // Returns number of the days from the firstDayOfWeek to the first day of the current month\n    weekDaysBeforeFirstDayOfTheMonth: function weekDaysBeforeFirstDayOfTheMonth() {\n      var firstDayOfTheMonth = new Date(\"\".concat(this.displayedYear, \"-\").concat(pad(this.displayedMonth + 1), \"-01T00:00:00+00:00\"));\n      var weekDay = firstDayOfTheMonth.getUTCDay();\n      return (weekDay - parseInt(this.firstDayOfWeek) + 7) % 7;\n    },\n    getWeekNumber: function getWeekNumber(dayInMonth) {\n      return weekNumber(this.displayedYear, this.displayedMonth, dayInMonth, parseInt(this.firstDayOfWeek), parseInt(this.localeFirstDayOfYear));\n    },\n    genWeekNumber: function genWeekNumber(weekNumber) {\n      return this.$createElement('td', [this.$createElement('small', {\n        staticClass: 'v-date-picker-table--date__week'\n      }, String(weekNumber).padStart(2, '0'))]);\n    },\n    // eslint-disable-next-line max-statements\n    genTBody: function genTBody() {\n      var children = [];\n      var daysInMonth = new Date(this.displayedYear, this.displayedMonth + 1, 0).getDate();\n      var rows = [];\n      var day = this.weekDaysBeforeFirstDayOfTheMonth();\n      if (this.showWeek) {\n        rows.push(this.genWeekNumber(this.getWeekNumber(1)));\n      }\n      var prevMonthYear = this.displayedMonth ? this.displayedYear : this.displayedYear - 1;\n      var prevMonth = (this.displayedMonth + 11) % 12;\n      var firstDayFromPreviousMonth = new Date(this.displayedYear, this.displayedMonth, 0).getDate();\n      var cellsInRow = this.showWeek ? 8 : 7;\n      while (day--) {\n        var date = \"\".concat(prevMonthYear, \"-\").concat(pad(prevMonth + 1), \"-\").concat(pad(firstDayFromPreviousMonth - day));\n        rows.push(this.$createElement('td', this.showAdjacentMonths ? [this.genButton(date, true, 'date', this.formatter, true)] : []));\n      }\n      for (day = 1; day <= daysInMonth; day++) {\n        var _date = \"\".concat(this.displayedYear, \"-\").concat(pad(this.displayedMonth + 1), \"-\").concat(pad(day));\n        rows.push(this.$createElement('td', [this.genButton(_date, true, 'date', this.formatter)]));\n        if (rows.length % cellsInRow === 0) {\n          children.push(this.genTR(rows));\n          rows = [];\n          if (this.showWeek && (day < daysInMonth || this.showAdjacentMonths)) {\n            rows.push(this.genWeekNumber(this.getWeekNumber(day + 7)));\n          }\n        }\n      }\n      var nextMonthYear = this.displayedMonth === 11 ? this.displayedYear + 1 : this.displayedYear;\n      var nextMonth = (this.displayedMonth + 1) % 12;\n      var nextMonthDay = 1;\n      while (rows.length < cellsInRow) {\n        var _date2 = \"\".concat(nextMonthYear, \"-\").concat(pad(nextMonth + 1), \"-\").concat(pad(nextMonthDay++));\n        rows.push(this.$createElement('td', this.showAdjacentMonths ? [this.genButton(_date2, true, 'date', this.formatter, true)] : []));\n      }\n      if (rows.length) {\n        children.push(this.genTR(rows));\n      }\n      return this.$createElement('tbody', children);\n    },\n    genTR: function genTR(children) {\n      return [this.$createElement('tr', children)];\n    }\n  },\n  render: function render() {\n    return this.genTable('v-date-picker-table v-date-picker-table--date', [this.genTHead(), this.genTBody()], this.calculateTableDate);\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
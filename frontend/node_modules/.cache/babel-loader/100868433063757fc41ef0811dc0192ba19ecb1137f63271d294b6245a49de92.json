{"ast":null,"code":"import \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport PostList from '../views/PostList.vue';\nimport PostDetail from '../views/PostDetail.vue';\nimport AdminLogin from '../views/AdminLogin.vue';\nimport AdminLayout from '../views/AdminLayout.vue';\nimport AdminDashboard from '../views/AdminDashboard.vue';\nimport AdminPosts from '../views/AdminPosts.vue';\nimport AdminUsers from '../views/AdminUsers.vue';\nVue.use(VueRouter);\nvar routes = [{\n  path: '/',\n  name: 'PostList',\n  component: PostList\n}, {\n  path: '/post/:id',\n  name: 'PostDetail',\n  component: PostDetail,\n  props: true\n}, {\n  path: '/admin/login',\n  name: 'AdminLogin',\n  component: AdminLogin\n}, {\n  path: '/admin',\n  component: AdminLayout,\n  meta: {\n    requiresAuth: true\n  },\n  children: [{\n    path: '',\n    name: 'AdminDashboard',\n    component: AdminDashboard\n  }, {\n    path: 'posts',\n    name: 'AdminPosts',\n    component: AdminPosts\n  }, {\n    path: 'users',\n    name: 'AdminUsers',\n    component: AdminUsers\n  }]\n}];\nvar router = new VueRouter({\n  mode: 'hash',\n  base: process.env.BASE_URL,\n  routes: routes\n});\n\n// Навигационная защита\nrouter.beforeEach(function (to, from, next) {\n  var isAdmin = localStorage.getItem('is_admin') === 'true';\n  var adminUser = localStorage.getItem('admin_user');\n  var adminToken = localStorage.getItem('admin_token');\n\n  // Проверяем, что все необходимые данные для авторизации есть\n  var isFullyAuthorized = isAdmin && adminUser && adminToken;\n  if (to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  })) {\n    if (!isFullyAuthorized) {\n      // Очищаем неполные данные авторизации\n      localStorage.removeItem('admin_user');\n      localStorage.removeItem('is_admin');\n      localStorage.removeItem('admin_token');\n      next('/admin/login');\n    } else {\n      // Дополнительная проверка прав пользователя\n      try {\n        var user = JSON.parse(adminUser);\n        if (!user.is_staff) {\n          localStorage.clear();\n          next('/admin/login');\n        } else {\n          next();\n        }\n      } catch (error) {\n        localStorage.clear();\n        next('/admin/login');\n      }\n    }\n  } else if (to.path === '/admin/login' && isFullyAuthorized) {\n    next('/admin');\n  } else {\n    next();\n  }\n});\nexport default router;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}